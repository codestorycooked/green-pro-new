@model GreenPro.AdminInterface.Models.RegisterViewModel
@{
    ViewBag.Title = "Create";
}

<h2>@ViewBag.Title User</h2>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<div class="row">
    @using (Html.BeginForm("Create", "UsersAdmin", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        <div class="col-md-7">

            @Html.AntiForgeryToken()
            <h4>Create a new account.</h4>
            <hr />
            @Html.ValidationSummary()
            <div class="form-group">
                @Html.LabelFor(m => m.UserName, new { @class = "col-md-3 control-label" })
                <div class="col-md-8">
                    @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                    @*@Html.HiddenFor(m => m.Email, )*@
                    @Html.ValidationMessageFor(m => m.UserName)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Password, new { @class = "col-md-3 control-label" })
                <div class="col-md-8">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-3 control-label" })
                <div class="col-md-8">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.RoleId, new { @class = "col-md-3 control-label" })
                <div class="col-md-5">
                    @Html.DropDownList("RoleId", null, htmlAttributes: new { @id = "selectedRole", @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.RoleId)
                </div>
            </div>
            
            <div class="form-group">
                @Html.LabelFor(m => m.FirstName, new { @class = "col-md-3 control-label" })
                <div class="col-md-8">
                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.FirstName)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.LastName, new { @class = "col-md-3 control-label" })
                <div class="col-md-8">
                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.LastName)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.DateofBirth, new { @class = "col-md-3 control-label" })
                <div class="col-md-4">
                    @Html.TextBoxFor(m => m.DateofBirth, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.DateofBirth)

                </div><div class="col-md-4 control-label" style="text-align:left!important">Format: MM/DD/YYYY</div>

            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Address, new { @class = "col-md-3 control-label" })
                <div class="col-md-8">
                    @Html.TextAreaFor(m => m.Address, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Address)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.StateId, new { @class = "col-md-3 control-label" })
                <div class="col-md-5">
                    @Html.DropDownList("StateId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.StateId)
                    @*@Html.DropDownListFor(model => model.StateId, Model.StateList, new { @class = "form-control" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.CityId, new { @class = "col-md-3 control-label" })
                <div class="col-md-5">
                    @Html.DropDownList("CityId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.CityId)
                    @*@Html.DropDownListFor(model => model.CityId, Model.CityList, new { @class = "form-control" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Pincode, new { @class = "col-md-3 control-label" })
                <div class="col-md-8">
                    @Html.TextBoxFor(m => m.Pincode, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Pincode)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-md-3 control-label" })
                <div class="col-md-8">
                    @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.PhoneNumber)
                </div>
            </div>


        </div>
        <div class="col-md-5">
            <h3>Select Garages</h3>
            <table class="table table-condensed">


                @{

        List<GreenPro.Data.Garage> garage = ViewBag.Garages;
        if (garage.Count == 0)
        {
            <p>Please add Services</p>
        }
        else
        {
            foreach (var service in garage)
            {

                <tr>
                    <td>


                        <input type="checkbox"
                               name="garages"
                               value="@service.GarageId " />
                        @*// @(Html.Raw(service.Selected ? "checked=\"checked\"" : "")) />*@
                        @service.Garage_Name
                    </td>
                </tr>





            }
        }
                }

            </table>
            <div class="form-group">
                <div class="col-md-offset-3 col-md-5">
                    <input type="submit" class="btn btn-default btn-primary" value="Register" />
                </div>
            </div>
            <span class="alert alert-danger">@ViewBag.ErrorMessage </span>

        </div>
    }
</div>


<script type="text/javascript">
    $(function () {
        //$('#datetimepicker1').datetimepicker({
        //    format: 'MM/DD/YYYY',
        //    defaultDate: "01/1/1960"
        //});

        $("#DateofBirth").datepicker({
            dateFormat: "mm/dd/yy"
        });
    });
    function CallChangefunc() {
        var a = $('#selectedRole option:selected').text();
        if (a == "Crew Member") {
            $('#crewadmindiv').show();
        }
        else {
            $('#crewadmindiv').hide();
        }        
    }
</script>

<script>
    $(document).ready(function () {
        $("#CityId").prop("readonly", true);
        $("#StateId").change(function () {
            $("#CityId").empty();
            var sid = $("#StateId").val();
            if (sid == "-1")
                $("#CityId").prop("readonly", true);
            else
                $("#CityId").prop("readonly", false);
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Citylist")',
                dataType: 'json',
                data: { id: sid },
                success: function (selectListItemList) {
                    $.each(selectListItemList, function (i, state) {
                        $("#CityId").append('<option value="'
                         + state.Value + '">'
                         + state.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        })
    });
</script>

