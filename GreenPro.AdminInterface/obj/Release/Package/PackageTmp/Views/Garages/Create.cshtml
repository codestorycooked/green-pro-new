@*@model GreenPro.Data.Garage*@

@model GreenPro.AdminInterface.Models.GarageViewModel
           @using System.Linq;


@{
    ViewBag.Title = "Create Garage";
}

<h2>Create Garage</h2>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Garage</h4>
        <hr />

        @Html.ValidationSummary()


        <div class="form-group">
            @Html.LabelFor(model => model.Garage_Name, new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Garage_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Garage_Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contact_Person, new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Contact_Person, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Contact_Person)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone_Number, new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Phone_Number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone_Number)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsActive)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Garage_Address, new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @Html.TextAreaFor(model => model.Garage_Address, new { @class = "form-control", @rows = "10" })
                @Html.ValidationMessageFor(model => model.Garage_Address)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.State, new { @class = "col-md-3 control-label" })
            <div class="col-md-5">
                @*@Html.DropDownList("State", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.DropDownListFor(model => model.State, (IEnumerable<SelectListItem>)ViewBag.StateId, "-Select-", htmlAttributes: new { @class = "form-control" })
               
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.City, new { @class = "col-md-3 control-label" })
            <div class="col-md-5">
                @*@Html.DropDownList("City", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.DropDownListFor(model => model.City, (IEnumerable<SelectListItem>)ViewBag.CityId, "-Select-", htmlAttributes: new { @class = "form-control" })
                
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Pincode, new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Pincode)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.OpenTime, new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.OpenTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OpenTime)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CloseTime, new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.CloseTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CloseTime)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ServiceDays, new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @*@Html.EditorFor(model => model.ServiceDays, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.DropDownListFor(model => model.ServiceDays, Model.AvailableServiceDays,"-Select-", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ServiceDays)*@
                @foreach (var day in Model.AvailableServiceDays)
                {
                   
                    <input type="checkbox" name="ServiceDays" value="@day.Value" /> @day.Text
                }
            </div>
        </div>

        




        <div class="form-group">
            <div class="col-md-offset-2 col-md-8">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    $(document).ready(function () {
        $("#City").prop("readonly", true);
        $("#State").change(function () {
            $("#City").empty();
            var sid = $("#State").val();
            if (sid == "-1")
                $("#City").prop("readonly", true);
            else
                $("#City").prop("readonly", false);
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Citylist")',
                dataType: 'json',
                data: { id: sid },
                success: function (selectListItemList) {
                    $.each(selectListItemList, function (i, state) {
                        $("#City").append('<option value="'
                         + state.Value + '">'
                         + state.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        })
    });
</script> 